#!/usr/bin/env python

#This script imports the  vulnerability scanner2.py  that scans all vulnerabilities, gets the target page to be scanned and runs 
# the file
#The page uses a session to ensure user is still logged in while the scan is running (persitst the session)
#Set 
import scanner #importing the scanner.py file

target_url = "http://192.168.63.131/dvwa/"  #dvwa will be used for this script, make sure it's the correct URL based on your IP

links_to_ignore = ["http://192.168.63.131/dvwa/logout.php"]  #this is used to tell the script which link to ignore, cos if a request is sent to the logout page, the program will end

data_dict = {"username": "admin", "password": "password", "Login":"submit"}

vuln_scanner = scanner.Scanner(target_url, links_to_ignore)
vuln_scanner.session.post("http://192.168.63.131/dvwa/login.php", data=data_dict)

#vuln_scanner.crawl()
forms = vuln_scanner.extract_forms("http://192.168.63.131/dvwa/vulnerabilities/xss_r/") #this page can be found in metasploitable
response = vuln_scanner.test_xss_in_link("http://192.168.63.131/dvwa/vulnerabilities/xss_r/?name=test") #use test_xss_in_link() method, put in a link here. If it's vulnerable, return true, else returns false
print(response)










